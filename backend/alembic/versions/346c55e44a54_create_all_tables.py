"""create all tables

Revision ID: 346c55e44a54
Revises: 7bd2721cf718
Create Date: 2025-04-26 18:59:22.450056

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '346c55e44a54'
down_revision: Union[str, None] = '7bd2721cf718'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('person',
    sa.Column('pid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('gender', sa.Enum('男', '女', name='gender_enum'), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('id_card', sa.String(length=18), nullable=False),
    sa.Column('phone', sa.String(length=11), nullable=False),
    sa.Column('emergency_contact', sa.String(length=50), nullable=False),
    sa.Column('emergency_phone', sa.String(length=11), nullable=False),
    sa.Column('category', sa.Enum('孤寡老人', '残障人士', '短期托管', name='category_enum'), nullable=False),
    sa.Column('bed_number', sa.String(length=20), nullable=False),
    sa.Column('check_in_date', sa.Date(), nullable=False),
    sa.Column('check_out_date', sa.Date(), nullable=True),
    sa.Column('check_out_reason', sa.String(length=100), nullable=True),
    sa.Column('photo', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('pid'),
    sa.UniqueConstraint('id_card')
    )
    op.create_index(op.f('ix_person_pid'), 'person', ['pid'], unique=False)
    op.create_table('user',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('real_name', sa.String(length=50), nullable=False),
    sa.Column('role', sa.Enum('管理员', '护理主任', '护理工'), nullable=False),
    sa.Column('phone', sa.String(length=11), nullable=False),
    sa.Column('is_activate', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('username')
    )
    op.create_table('care',
    sa.Column('care_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.Integer(), nullable=False),
    sa.Column('care_date', sa.Date(), nullable=False),
    sa.Column('care_content', sa.Text(), nullable=False),
    sa.Column('caregiver_id', sa.Integer(), nullable=False),
    sa.Column('evaluation', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['caregiver_id'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['pid'], ['person.pid'], ),
    sa.PrimaryKeyConstraint('care_id')
    )
    op.create_table('care_plan',
    sa.Column('plan_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.Integer(), nullable=False),
    sa.Column('executor_id', sa.Integer(), nullable=True),
    sa.Column('plan_content', sa.Text(), nullable=False),
    sa.Column('frequency', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('未完成', '已完成', name='status_enum'), server_default='未完成', nullable=False),
    sa.ForeignKeyConstraint(['executor_id'], ['user.uid'], ),
    sa.ForeignKeyConstraint(['pid'], ['person.pid'], ),
    sa.PrimaryKeyConstraint('plan_id')
    )
    op.create_table('health',
    sa.Column('health_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.Integer(), nullable=False),
    sa.Column('disease_history', sa.Text(), nullable=True),
    sa.Column('allergy_history', sa.Text(), nullable=True),
    sa.Column('medical_history', sa.Text(), nullable=True),
    sa.Column('last_checkup_date', sa.Date(), nullable=True),
    sa.Column('blood_pressure', sa.String(length=20), nullable=True),
    sa.Column('blood_glucose', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['pid'], ['person.pid'], ),
    sa.PrimaryKeyConstraint('health_id')
    )
    op.create_index(op.f('ix_health_health_id'), 'health', ['health_id'], unique=False)
    op.create_table('reminder',
    sa.Column('reminder_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.Integer(), nullable=False),
    sa.Column('reminder_type', sa.String(length=50), nullable=False),
    sa.Column('cycle', sa.String(length=50), nullable=False),
    sa.Column('next_reminder_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['pid'], ['person.pid'], ),
    sa.PrimaryKeyConstraint('reminder_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reminder')
    op.drop_index(op.f('ix_health_health_id'), table_name='health')
    op.drop_table('health')
    op.drop_table('care_plan')
    op.drop_table('care')
    op.drop_table('user')
    op.drop_index(op.f('ix_person_pid'), table_name='person')
    op.drop_table('person')
    # ### end Alembic commands ###
